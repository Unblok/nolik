version: "2"

services:
  nginx:
    build: ./nginx
    image: chainify/nolik-nginx
    container_name: nolik-nginx
    ports:
      - 80:80
      - 3001:3001
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    restart: unless-stopped

  web:
    build: ./web
    image: chainify/nolik-web
    container_name: nolik-web
    volumes:
      - ./web:/opt
      - ./web/next-config.js:/opt/next-config.js
    environment:
      WS_PORT: 3001
    restart: unless-stopped
    command: bash -c "npm install -y && npm run dev"

  api:
    build: ./server
    image: chainify/nolik-api
    container_name: nolik-api
    volumes:
      - ./server:/opt
      - ./server/config.ini:/opt/config.ini
      - ~/.data/nolik/leveldb:/root/.data/leveldb
    command: bash -c "python3.7 server.py"
    depends_on:
      - ipfs
      - postgres
    tty: true
    stdin_open: true
    restart: unless-stopped

  postgres:
    build: ./postgresql
    image: chainify/nolik-postgres
    container_name: nolik-postgres
    volumes:
      - ~/.data/nolik/postgres:/var/lib/postgresql/data
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=chainify
      - POSTGRES_USER=chainify
      - POSTGRES_PASSWORD=chainify
    tty: true
    stdin_open: true
    restart: unless-stopped

  redis:
    build: ./redis
    image: chainify/nolik-redis
    container_name: nolik-redis
    volumes:
      - ~/.data/nolik/redis:/data
    tty: true
    stdin_open: true
    restart: unless-stopped

  parser:
    build: ./parser
    image: chainify/nolik-parser
    container_name: nolik-parser
    volumes:
      - ./parser:/opt
    depends_on:
      - postgres
      - ipfs
    command: bash -c "python3.7 server.py"
    tty: true
    stdin_open: true
    labels:
      - "autoheal=true"
    restart: unless-stopped

  ipfs:
    # build: ./ipfs
    image: ipfs/go-ipfs:latest
    container_name: nolik-ipfs
    volumes:
      - ~/.data/nolik/ipfs/data:/data/ipfs
      - ~/.data/nolik/ipfs/staging:/export
    ports:
      - 4001:4001
      - 5001:5001
      - 8080:8080
    restart: unless-stopped
    tty: true
    stdin_open: true

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: nolik-autoheal
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal